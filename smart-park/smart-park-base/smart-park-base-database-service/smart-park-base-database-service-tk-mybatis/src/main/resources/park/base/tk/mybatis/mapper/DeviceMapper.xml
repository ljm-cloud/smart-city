<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="park.base.tk.mybatis.mapper.DeviceMapper">
  <resultMap id="BaseResultMap" type="park.base.tk.mybatis.entity.Device">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="wc_id" jdbcType="INTEGER" property="wcId" />
    <result column="wc_detail_id" jdbcType="INTEGER" property="wcDetailId" />
    <result column="position_id" jdbcType="INTEGER" property="positionId" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="device_name" jdbcType="VARCHAR" property="deviceName" />
    <result column="device_type" jdbcType="INTEGER" property="deviceType" />
    <result column="device_id" jdbcType="VARCHAR" property="deviceId" />
    <result column="creater_id" jdbcType="INTEGER" property="createrId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_del" jdbcType="BIT" property="isDel" />
    <result column="last_active" jdbcType="TIMESTAMP" property="lastActive" />
    <result column="online" jdbcType="BIT" property="online" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="offline_time" jdbcType="TIMESTAMP" property="offlineTime" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="ptype" jdbcType="INTEGER" property="ptype" />
    <result column="partner_id" jdbcType="VARCHAR" property="partnerId" />
    <result column="appid" jdbcType="INTEGER" property="appid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, wc_id, wc_detail_id, position_id, version, device_name, device_type, device_id, 
    creater_id, create_time, is_del, last_active, online, update_time, offline_time, 
    pid, ptype, partner_id, appid
  </sql>
  <select id="selectByExample" parameterType="park.base.tk.mybatis.entity.DeviceExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="park.base.tk.mybatis.entity.DeviceExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from t_device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="park.base.tk.mybatis.entity.DeviceExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from t_device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update t_device
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.wcId != null">
        wc_id = #{record.wcId,jdbcType=INTEGER},
      </if>
      <if test="record.wcDetailId != null">
        wc_detail_id = #{record.wcDetailId,jdbcType=INTEGER},
      </if>
      <if test="record.positionId != null">
        position_id = #{record.positionId,jdbcType=INTEGER},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceName != null">
        device_name = #{record.deviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceType != null">
        device_type = #{record.deviceType,jdbcType=INTEGER},
      </if>
      <if test="record.deviceId != null">
        device_id = #{record.deviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.createrId != null">
        creater_id = #{record.createrId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=BIT},
      </if>
      <if test="record.lastActive != null">
        last_active = #{record.lastActive,jdbcType=TIMESTAMP},
      </if>
      <if test="record.online != null">
        online = #{record.online,jdbcType=BIT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.offlineTime != null">
        offline_time = #{record.offlineTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.ptype != null">
        ptype = #{record.ptype,jdbcType=INTEGER},
      </if>
      <if test="record.partnerId != null">
        partner_id = #{record.partnerId,jdbcType=VARCHAR},
      </if>
      <if test="record.appid != null">
        appid = #{record.appid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update t_device
    set id = #{record.id,jdbcType=INTEGER},
      wc_id = #{record.wcId,jdbcType=INTEGER},
      wc_detail_id = #{record.wcDetailId,jdbcType=INTEGER},
      position_id = #{record.positionId,jdbcType=INTEGER},
      version = #{record.version,jdbcType=VARCHAR},
      device_name = #{record.deviceName,jdbcType=VARCHAR},
      device_type = #{record.deviceType,jdbcType=INTEGER},
      device_id = #{record.deviceId,jdbcType=VARCHAR},
      creater_id = #{record.createrId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      is_del = #{record.isDel,jdbcType=BIT},
      last_active = #{record.lastActive,jdbcType=TIMESTAMP},
      online = #{record.online,jdbcType=BIT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      offline_time = #{record.offlineTime,jdbcType=TIMESTAMP},
      pid = #{record.pid,jdbcType=INTEGER},
      ptype = #{record.ptype,jdbcType=INTEGER},
      partner_id = #{record.partnerId,jdbcType=VARCHAR},
      appid = #{record.appid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>